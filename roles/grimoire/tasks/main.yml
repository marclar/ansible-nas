---
- name: Start Grimoire
  block:
    - name: Create Grimoire Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_nas_user }}"
        group: "{{ ansible_nas_user }}"
        mode: 0755
      with_items:
        - "{{ grimoire_data_directory }}"
        - "{{ grimoire_data_directory }}/data"

    - name: Create Grimoire Docker Container
      community.docker.docker_container:
        name: "{{ grimoire_container_name }}"
        image: "{{ grimoire_image_name }}:{{ grimoire_image_version }}"
        pull: true
        volumes:
          - "{{ grimoire_data_directory }}/data:/app/data:rw"
        ports:
          - "{{ grimoire_port }}:5173"
        env:
          PORT: "5173"
          PUBLIC_HTTPS_ONLY: "{{ grimoire_https_only }}"
          PUBLIC_SIGNUP_DISABLED: "{{ grimoire_signup_disabled }}"
        restart_policy: unless-stopped
        memory: "{{ grimoire_memory }}"
        labels:
          traefik.enable: "{{ grimoire_available_externally | string }}"
          traefik.http.routers.grimoire.rule: "Host(`{{ grimoire_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.grimoire.entrypoints: "web"
          traefik.http.services.grimoire.loadbalancer.server.port: "5173"
          homepage.group: "Tools"
          homepage.name: "Grimoire"
          homepage.icon: "grimoire"
          homepage.href: "http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ grimoire_port }}"
          homepage.description: "Bookmark Manager & Web Archive"

  when: grimoire_enabled is true

- name: Stop Grimoire
  block:
    - name: Stop Grimoire Container
      community.docker.docker_container:
        name: "{{ grimoire_container_name }}"
        state: absent
  when: grimoire_enabled is false